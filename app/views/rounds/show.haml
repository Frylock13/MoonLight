.container
  .round
    = form_for fight_round_path(round_id: params[:round_id]), method: :put do |f|
      .row
        .col-md-6
          .character.player
            .progress
              .progress-bar.progress-bar-danger{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "80", :role => "progressbar", :style => "width: #{progress_percents(@player.hp, @round.player_hp)}"}
                %span.sr-only 80% Complete (danger)
                = "#{@round.player_hp} HP"

            .progress
              .progress-bar.progress-bar-info{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "20", :role => "progressbar", :style => "width: 100%"}
                %span.sr-only 20% Complete
                1 MP

            = image_tag @player.avatar.image.url, class: 'image'

            .points
              %h4.block-title Defense:

              - @points.each do |point_name|
                .button
                  = f.label point_name
                  = f.radio_button 'defense', point_name, checked: true

        .col-md-6
          .character.bot
            .progress
              .progress-bar.progress-bar-danger{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "80", :role => "progressbar", :style => "width: #{progress_percents(@bot.hp, @round.bot_hp)}"}
                %span.sr-only 80% Complete (danger)
                = "#{@round.bot_hp} HP"

            .progress
              .progress-bar.progress-bar-info{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "20", :role => "progressbar", :style => "width: 100%"}
                %span.sr-only 20% Complete
                1 MP

            .points
              %h4.block-title Attack:

              - @points.each do |point_name|
                .button
                  = f.label point_name
                  = f.radio_button 'attack', point_name, checked: true

            = image_tag @bot.image.url, class: 'image'

      .row
        = f.submit 'HIT', class: 'btn btn-danger center'

    .rounds
      - @rounds.each do |round|
        - cache round do
          = render round
